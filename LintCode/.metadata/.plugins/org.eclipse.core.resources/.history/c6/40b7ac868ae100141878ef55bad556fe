package LintCode;

import java.util.ArrayList;
import java.util.Arrays;

public class Chapter9 {
    public int partitionArray(ArrayList<Integer> nums, int k) {
	    //write your code here
	    if(nums.size() == 0){
	        return 0;
	    }
	    int start = 0;//start pointer
	    int end = nums.size() - 1;//end pointer
	    boolean startStop = false;
	    boolean endStop = false;
	    while(start < end){
	        if(nums.get(start) >= k){
	        	startStop = true;
	        }
	        if(nums.get(end) < k){
	        	endStop = true;
	        }
	        if(startStop && endStop){
	        	swap(nums,start,end);
	        	start++;
	        	end--;
	        	startStop = false;
	        	endStop = false;
	        	continue;
	        }
	        start ++;
	        end ++;
	    }
	    System.out.println(nums.toString());
	    return start;
    }
    
    public void swap(ArrayList<Integer> nums, int start, int end){
        int temp = nums.get(start);
        nums.set(start,nums.get(end));
        nums.set(end,temp);
    }
    public static void main(String[] args){
    	Chapter9 cp9 = new Chapter9();
    	ArrayList<Integer> nums = new ArrayList<Integer>(Arrays.asList(3,2,3,3,2,1));
    
    	System.out.println(cp9.partitionArray(nums,2));
    }
    
}
