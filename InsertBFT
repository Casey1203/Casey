/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param root: The root of the binary search tree.
     * @param node: insert this node into the binary search tree
     * @return: The root of the new binary search tree.
     */
    void swap(TreeNode* a, TreeNode* b) {
        int temp = a->val;
        a->val = b->val;
        b->val = temp;
    };
    void adjustTree(TreeNode* root) {
        if (root == NULL)
            return ;
        if (root->right != NULL && root->val > root->right->val)
            swap(root,root->right);
        if (root->left != NULL && root->val < root->left->val )
            swap(root,root->left);
        if (root->left != NULL && root->right != NULL && root->left->val > root->right->val)
            swap(root->left,root->right);
        adjustTree(root->left);
        adjustTree(root->right);
    };
    TreeNode* insertNode(TreeNode* root, TreeNode* node) {
        // write your code here
        if (root == NULL
            return node;
        TreeNode *temp = root;
        while (temp->right != NULL) {
            temp = temp->right;
        }
        temp->right = node;
        adjustTree(root);
        return root;
    }
};
